{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "existingVNETName": {
      "type": "string",
      "metadata": {
        "description": "Existing VNET that contains the domain controller"
      }
    },
    "existingSubnetName": {
      "type": "string",
      "metadata": {
        "description": "Existing subnet that contains the domain controller"
      }
    },
    "virtualMachineName": {
      "type": "string",
      "metadata": {
        "description": "Unique public DNS prefix for the deployment. The fqdn will look something like '<dnsname>.westus.cloudapp.azure.com'. Up to 62 chars, digits or dashes, lowercase, should start with a letter: must conform to '^[a-z][a-z0-9-]{1,61}[a-z0-9]$'."
      }
    },
    "virtualMachineSize": {
      "type": "string",
      "defaultValue": "Standard_A2",
      "metadata": {
        "description": "The size of the virtual machines"
      }
    },
    "domainToJoin": {
      "type": "string",
      "metadata": {
        "description": "The FQDN of the AD domain"
      }
    },
    "domainUsername": {
      "type": "string",
      "metadata": {
        "description": "Username of the account on the domain"
      }
    },
    "domainPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Password of the account on the domain"
      }
    },
    "ouPath": {
      "type": "string",
      "defaultValue": "OU=JuraServers,DC=jura,DC=local",
      "metadata": {
        "description": "Specifies an organizational unit (OU) for the domain account. Enter the full distinguished name of the OU in quotation marks. Example: 'OU=testOU; DC=domain; DC=Domain; DC=com"
      }
    },
    "domainJoinOptions": {
      "type": "int",
      "defaultValue": 3,
      "metadata": {
        "description": "Set of bit flags that define the join options. Default value of 3 is a combination of NETSETUP_JOIN_DOMAIN (0x00000001) & NETSETUP_ACCT_CREATE (0x00000002) i.e. will join the domain and create the account on the domain. For more information see https://msdn.microsoft.com/en-us/library/aa392154(v=vs.85).aspx"
      }
    },
    "storageAccountName": {
      "type": "string"
    },
    "vmAdminUsername": {
      "type": "string",
      "metadata": {
        "description": "The name of the administrator of the new VM and the domain. Exclusion list: 'admin','administrator"
      }
    },
    "vmAdminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "The password for the administrator account of the new VM and the domain"
      }
    }
  },

  "variables": {
    "apiVersion": "2015-06-15",
    "imageOffer": "windows",
    "imagePublisher": "MicrosoftVisualStudio",
    "nicName": "[concat(parameters('virtualMachineName'),'Nic')]",
    "publicIPName": "[concat(parameters('virtualMachineName'),'Pip')]",
    "subnetId": "[concat(variables('vnetID'),'/subnets/', parameters('existingSubnetName'))]",
    "vnetID": "[resourceId(resourceGroup().name, 'Microsoft.Network/virtualNetworks', parameters('existingVNETName'))]",
    "windowsOSVersion": "latest",
    "vmExtensionName": "dscExtension"
  },
  "resources": [
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[parameters('storageAccountName')]",
      "location": "north europe",
      "properties": {
        "accountType": "Standard_LRS"
      }
    },
    {
      "name": "[variables('nicName')]",
      "type": "Microsoft.Network/networkInterfaces",
      "apiVersion": "2016-09-01",
      "location": "North Europe",
      "dependsOn": [],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "subnet": {
                "id": "[variables('subnetId')]"
              },
              "privateIPAllocationMethod": "Dynamic"
            }
          }
        ]
      }
    },
    {
      "name": "[parameters('virtualMachineName')]",
      "type": "Microsoft.Compute/virtualMachines",
      "apiVersion": "2015-06-15",
      "location": "North Europe",
      "dependsOn": [
        "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]",
        "[concat('Microsoft.Storage/storageAccounts/', parameters('storageAccountName'))]"
      ],
      "properties": {
        "osProfile": {
          "computerName": "[parameters('virtualMachineName')]",
          "adminUsername": "[parameters('VMadminUsername')]",
          "adminPassword": "Password01",
          "windowsConfiguration": {
            "provisionVmAgent": "true",
            "timezone": "GMT Standard Time"
          }
        },
        "hardwareProfile": {
          "vmSize": "[parameters('virtualMachineSize')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "MicrosoftWindowsServer",
            "offer": "WindowsServer",
            "sku": "2016-Datacenter",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net/vhds/',parameters('virtualMachineName'), 'disk0.vhd')]"
            },
            "createOption": "fromImage"
          },
          "dataDisks": []
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('nicName'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',parameters('storageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    },
    {
      "apiVersion": "[variables('apiVersion')]",
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachineName'),'/joindomain')]",
      "location": "north europe",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Compute",
        "type": "JsonADDomainExtension",
        "typeHandlerVersion": "1.3",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "Name": "[parameters('domainToJoin')]",
          "OUPath": "[parameters('ouPath')]",
          "User": "[concat(parameters('domainToJoin'), '\\', parameters('domainUsername'))]",
          "Restart": "true",
          "Options": "[parameters('domainJoinOptions')]"
        },
        "protectedSettings": {
          "Password": "[parameters('domainPassword')]"
        }
      }
    },
    {
      "type": "Microsoft.Compute/virtualMachines/extensions",
      "name": "[concat(parameters('virtualMachineName'),'/', variables('vmExtensionName'))]",
      "apiVersion": "2015-05-01-preview",
      "location": "North Europe",
      "dependsOn": [
        "[concat('Microsoft.Compute/virtualMachines/', parameters('virtualMachineName'))]"
      ],
      "properties": {
        "publisher": "Microsoft.Powershell",
        "type": "DSC",
        "typeHandlerVersion": "2.21",
        "autoUpgradeMinorVersion": true,
        "settings": {
          "ModulesUrl": "[concat('https', '://', parameters('storageAccountName'), '.blob.core.windows.net', '/dsc/iisinstall.ps1.zip')]",
          "ConfigurationFunction": "iisinstall.ps1\\IISInstall",
          "Properties": {
            "MachineName": "[parameters('virtualMachineName')]"
          }
        },
        "protectedSettings": null
      }
    }
  ]
}